{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css","components/Burger/BuildControls/BuildControls.module.css","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","BuildControl","Label","Less","More","Content","Burger","BuildControls","layout","props","react_default","a","createElement","Fragment","className","styles","children","BurgerIngredient","ingredient","this","type","Component","burger","ingredientsArray","Object","keys","ingredients","map","igKey","igCount","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","resultArray","igArray","concat","length","buildControl","label","onClick","lessButtonHandler","disabled","moreButtonHandler","controls","buildControls","ctrl","ingredientAdded","ingredientRemoved","disabledInfo","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addIngredientHandler","oldCount","state","setState","objectSpread","defineProperty","totalPrice","removeIngredientHandler","App","Layout","containers_BurgerBuilder_BurgerBuilder","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2753ddfb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__3JJgs\",\"BreadTop\":\"BurgerIngredient_BreadTop__1Z0i4\",\"Seeds1\":\"BurgerIngredient_Seeds1__a26sO\",\"Seeds2\":\"BurgerIngredient_Seeds2__1bxXI\",\"Meat\":\"BurgerIngredient_Meat__2IIz8\",\"Cheese\":\"BurgerIngredient_Cheese__-lOBa\",\"Salad\":\"BurgerIngredient_Salad__1UusJ\",\"Bacon\":\"BurgerIngredient_Bacon__xzILx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2FxCO\",\"Label\":\"BuildControl_Label__36yIH\",\"Less\":\"BuildControl_Less__9CPdm\",\"More\":\"BuildControl_More__6d2rw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__ZJU4s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__SMbWY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3BEql\"};","import React from 'react';\r\nimport styles from './Layout.module.css';\r\n\r\nconst layout = props => (\r\n    <>\r\n        <div>Toolbar, SideDrawer, Backdrop</div>\r\n        <main className={styles.Content}>{props.children}</main>\r\n    </>\r\n);\r\n\r\nexport default layout;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './BurgerIngredient.module.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render() {\r\n        let ingredient;\r\n\r\n        switch (this.props.type) {\r\n            case 'bread-bottom':\r\n                ingredient = <div className={styles.BreadBottom} />;\r\n                break;\r\n            case 'bread-top':\r\n                ingredient = (\r\n                    <div className={styles.BreadTop}>\r\n                        <div className={styles.Seeds1} />\r\n                        <div className={styles.Seeds2} />\r\n                    </div>\r\n                );\r\n                break;\r\n            case 'meat':\r\n                ingredient = <div className={styles.Meat} />;\r\n                break;\r\n            case 'cheese':\r\n                ingredient = <div className={styles.Cheese} />;\r\n                break;\r\n            case 'salad':\r\n                ingredient = <div className={styles.Salad} />;\r\n                break;\r\n            case 'bacon':\r\n                ingredient = <div className={styles.Bacon} />;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from 'react';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\nimport styles from './Burger.module.css';\r\n\r\nconst burger = props => {\r\n    let ingredientsArray = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            const igCount = props.ingredients[igKey];\r\n            return [...Array(igCount)].map((_, i) => <BurgerIngredient key={igKey + i} type={igKey} />);\r\n        })\r\n        .reduce((resultArray, igArray) => [...resultArray, ...igArray], []);\r\n\r\n    return (\r\n        <div className={styles.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {ingredientsArray.length > 0 ? ingredientsArray : <p>NO INGREDIENTS ADDED</p>}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;\r\n","import React from 'react';\r\n\r\nimport styles from './BuildControl.module.css';\r\n\r\nconst buildControl = props => {\r\n    return (\r\n        <div className={styles.BuildControl}>\r\n            <div className={styles.Label}>{props.label}</div>\r\n            <button className={styles.Less} onClick={props.lessButtonHandler} disabled={props.disabled}>\r\n                Less\r\n            </button>\r\n            <button className={styles.More} onClick={props.moreButtonHandler}>\r\n                More\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default buildControl;\r\n","import React from 'react';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport styles from './BuildControls.module.css';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst buildControls = props => {\r\n    return (\r\n        <div className={styles.BuildControls}>\r\n            {controls.map(ctrl => (\r\n                <BuildControl\r\n                    key={ctrl.label}\r\n                    label={ctrl.label}\r\n                    moreButtonHandler={() => props.ingredientAdded(ctrl.type)}\r\n                    lessButtonHandler={() => props.ingredientRemoved(ctrl.type)}\r\n                    disabled={props.disabledInfo[ctrl.type]}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default buildControls;\r\n","import React, { Component } from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport BuildControls from '../../Burger/BuildControls/BuildControls';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7,\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ingredients: {\r\n                salad: 0,\r\n                bacon: 0,\r\n                cheese: 0,\r\n                meat: 0,\r\n            },\r\n            totalPrice: 4,\r\n        };\r\n    }\r\n\r\n    addIngredientHandler = type => {\r\n        const oldCount = this.state.ingredients[type];\r\n        this.setState({\r\n            ingredients: {\r\n                ...this.state.ingredients,\r\n                [type]: oldCount + 1,\r\n            },\r\n            totalPrice: this.state.totalPrice + INGREDIENT_PRICES[type],\r\n        });\r\n    };\r\n\r\n    removeIngredientHandler = type => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if (oldCount <= 0) return;\r\n        this.setState({\r\n            ingredients: {\r\n                ...this.state.ingredients,\r\n                [type]: oldCount - 1,\r\n            },\r\n            totalPrice: this.state.totalPrice - INGREDIENT_PRICES[type],\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.state.ingredients,\r\n        };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Burger ingredients={this.state.ingredients} />\r\n                <BuildControls\r\n                    ingredientAdded={this.addIngredientHandler}\r\n                    ingredientRemoved={this.removeIngredientHandler}\r\n                    disabledInfo={disabledInfo}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n","import React, { Component } from 'react';\r\nimport Layout from './components/Layout/Layout';\r\nimport BurgerBuilder from './components/containers/BurgerBuilder/BurgerBuilder';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Layout>\r\n                    <BurgerBuilder />\r\n                </Layout>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n// TODO: 18\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}