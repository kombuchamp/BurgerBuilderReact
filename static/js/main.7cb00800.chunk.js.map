{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Button/Button.module.css","components/UI/Input/Input.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Burger/BuildControls/BuildControls.module.css","assets/images/logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/Burger/OrderSummary/OrderSummary.module.css","components/UI/Progress/Progress.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","components/Order/ContactData/ContactData.module.css","components/Order/Order.module.css","components/Auth/Auth.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","util/axios-orders.js","config/backend-config.js","components/UI/Progress/Progress.js","components/HOC/withErrorHandler/withErrorHandler.js","store/actions/order.js","store/actions/actionTypes.js","store/actions/auth.js","components/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","util/checkValidity.js","components/Order/ContactData/ContactData.js","components/Order/Checkout/Checkout.js","components/Order/Order.js","components/Orders/Orders.js","components/Auth/Auth.js","components/Auth/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","SideDrawer","Open","Close","Logo","BuildControl","Label","Less","More","Button","Success","Danger","Info","Input","InputElement","Invalid","Clickable","NavigationItem","active","Toolbar","DesktopOnly","BuildControls","OrderButton","enable","__webpack_require__","p","NavigationItems","DrawerToggle","Content","Backdrop","Burger","Modal","Header","Progress","load1","CheckoutSummary","ContactData","Order","Auth","props","react_default","a","createElement","className","styles","src","logo","alt","onClick","react_router_dom","to","link","exact","activeClassName","children","NavigationItems_NavigationItem_NavigationItem","isAuthenticated","withRouter","SideDrawer_DrawerToggle_DrawerToggle","drawerToggleClicked","components_Logo_Logo","history","push","Navigation_NavigationItems_NavigationItems","isOpen","classes","join","Fragment","UI_Backdrop_Backdrop","close","ev","Layout","state","isSideDrawerOpen","sideDrawerClosedHandler","_this","setState","sideDrawerToggleHandler","prevState","Navigation_Toolbar_Toolbar","this","Navigation_SideDrawer_SideDrawer","Component","connect","auth","idToken","BurgerIngredient","ingredient","type","ingredientsArray","Object","keys","ingredients","map","igKey","igCount","parseInt","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","resultArray","igArray","concat","length","label","lessButtonHandler","disabled","moreButtonHandler","controls","price","toFixed","ctrl","BuildControls_BuildControl_BuildControl","ingredientAdded","ingredientRemoved","disabledInfo","isOrderable","orderButtonHandler","nextProps","nextState","closeHandler","style","transform","opacity","OrderSummary","ingredientSummary","textTransform","UI_Button_Button","cancelButtonHandler","okButtonHandler","instance","axios","create","baseURL","validateStatus","status","withErrorHandler","WrappedComponent","_Component","_class","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","error","requestInterceptor","interceptors","request","use","req","responseInterceptor","response","res","inherits","createClass","value","eject","_this2","UI_Modal_Modal","message","purchaseBurgerSuccess","id","orderData","payload","orderId","fetchOrdersSuccess","orders","authSuccess","userId","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","console","warn","BurgerBuilder","isBurgerOrderable","values","every","amount","inOrderMode","pathname","search","orderModeOffHandler","proceedToCheckout","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","inInitPurchase","stop","onInitIngredients","objectSpread","Burger_OrderSummary_OrderSummary","totalPrice","components_Burger_Burger","Burger_BuildControls_BuildControls","onIngredientAdded","onIngredientRemoved","UI_Progress_Progress","burgerBuilder","ingredientName","actions","_ref","get","sent","data","t0","_x","apply","arguments","Number","width","margin","onCheckoutCancelled","onCheckoutContinued","inputElement","inputStyles","invalid","elementType","onChange","elementConfig","options","o","displayValue","assign","checkValidity","rules","isValid","required","trim","minLength","orderForm","name","placeholder","validationRules","valid","touched","street","zipCode","country","email","deliveryMethod","isFormValid","orderHandler","formData","formElemId","order","preventDefault","onOrderBurger","inputChangeHandler","inputIdentifier","updatedOrderForm","updatedElement","target","formIsValid","inputId","formElementsArray","config","isLoading","onSubmit","formElem","UI_Input_Input","post","params","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","isPurchased","react_router","Order_CheckoutSummary_CheckoutSummary","path","match","component","count","ig","display","padding","border","Orders","updateOrders","finish","onFetchOrders","components_Order_Order","fetchError","_ref2","_callee2","_context2","orderBy","equalTo","Error","_x2","password","isSignUp","controlName","updatedControls","defineProperty","submitHandler","onAuth","switchAuthModeHandler","location","errorMessage","formControls","isBuilderTouched","isTouched","authData","apiKey","url","_response$data","token","returnSecureToken","process","localId","expiresIn","setItem","Date","getTime","Logout","onLogout","App","onTryAutoSignUp","components_Layout_Layout","getItem","expirationDateString","expirationDate","currentDate","Boolean","window","hostname","INGREDIENT_PRICES","salad","cheese","meat","bacon","initialState","reducer","undefined","action","newOrder","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","basename","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7cb00800.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__17kQL\",\"BreadTop\":\"BurgerIngredient_BreadTop__3tIus\",\"Seeds1\":\"BurgerIngredient_Seeds1__2feXf\",\"Seeds2\":\"BurgerIngredient_Seeds2__1dA-D\",\"Meat\":\"BurgerIngredient_Meat__2hZl2\",\"Cheese\":\"BurgerIngredient_Cheese__3Mvx0\",\"Salad\":\"BurgerIngredient_Salad__1_zFO\",\"Bacon\":\"BurgerIngredient_Bacon___Lqbw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__28CW0\",\"Open\":\"SideDrawer_Open__JrTIq\",\"Close\":\"SideDrawer_Close__3y3G3\",\"Logo\":\"SideDrawer_Logo__1CIPW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__17e5i\",\"Label\":\"BuildControl_Label__3_HNr\",\"Less\":\"BuildControl_Less__1amXZ\",\"More\":\"BuildControl_More__Fli9q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1wrbS\",\"Success\":\"Button_Success__3DG2D\",\"Danger\":\"Button_Danger__g-kvA\",\"Info\":\"Button_Info__3FV0t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1kZBx\",\"Label\":\"Input_Label__oP906\",\"InputElement\":\"Input_InputElement__3cTGM\",\"Invalid\":\"Input_Invalid__1jd4d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3Z7va\",\"Clickable\":\"Logo_Clickable__3qP4O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1jrra\",\"active\":\"NavigationItem_active__1vM_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__39hr6\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1gBGh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3WaLW\",\"OrderButton\":\"BuildControls_OrderButton__1qzYz\",\"enable\":\"BuildControls_enable__1S3ZC\"};","module.exports = __webpack_public_path__ + \"static/media/logo.b44c83b1.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1StfC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3a9Js\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__T2kny\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2r8AG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2uEki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3xywP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"OrderSummary_Header__dZtYF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Progress\":\"Progress_Progress__2b73R\",\"load1\":\"Progress_load1__3ktUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1V0I5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__3VtY9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__368wF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__WS9Mu\"};","import React from 'react';\r\nimport logo from '../../assets/images/logo.png';\r\nimport styles from './Logo.module.css';\r\n\r\nconst Logo = props => (\r\n    <div className={styles.Logo}>\r\n        <img src={logo} alt=\"BurgerBuilder\" onClick={props.onClick} className={props.onClick ? styles.Clickable : ''} />\r\n    </div>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './NavigationItem.module.css';\r\n\r\nconst NavigationItem = props => (\r\n    <li className={styles.NavigationItem}>\r\n        <NavLink to={props.link} exact activeClassName={styles.active}>\r\n            {props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default NavigationItem;\r\n","import React from 'react';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport styles from './NavigationItems.module.css';\r\n\r\nconst NavigationItems = props => {\r\n    return (\r\n        <ul className={styles.NavigationItems}>\r\n            <NavigationItem link=\"/\">Bugrer Builder</NavigationItem>\r\n            {props.isAuthenticated && <NavigationItem link=\"/orders\">Orders</NavigationItem>}\r\n            {props.isAuthenticated ? (\r\n                <NavigationItem link=\"/logout\">Logout</NavigationItem>\r\n            ) : (\r\n                <NavigationItem link=\"/auth\">Sign Up</NavigationItem>\r\n            )}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default NavigationItems;\r\n","import React from 'react';\r\nimport styles from './DrawerToggle.module.css';\r\n\r\nconst DrawerToggle = props => {\r\n    return (\r\n        <div className={styles.DrawerToggle} onClick={props.onClick}>\r\n            <div />\r\n            <div />\r\n            <div />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DrawerToggle;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\nimport styles from './Toolbar.module.css';\r\n\r\nconst Toolbar = props => (\r\n    <header className={styles.Toolbar}>\r\n        <DrawerToggle onClick={props.drawerToggleClicked} />\r\n        <Logo onClick={() => props.history.push('/')} />\r\n        <nav className={styles.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuthenticated} />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default withRouter(Toolbar);\r\n","import React from 'react';\r\nimport styles from './Backdrop.module.css';\r\n\r\nconst Backdrop = props => (props.isOpen ? <div className={styles.Backdrop} onClick={props.onClick} /> : null);\r\n\r\nexport default Backdrop;\r\n","import React from 'react';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Logo from '../../Logo/Logo';\r\nimport styles from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nconst SideDrawer = props => {\r\n    const classes = [styles.SideDrawer, props.isOpen ? styles.Open : styles.Close].join(' ');\r\n\r\n    // Close sidebar if link area is clicked\r\n    const sideDrawerClick = ev => {\r\n        props.close();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Backdrop isOpen={props.isOpen} onClick={props.close} />\r\n            <div className={classes}>\r\n                <div className={styles.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav onClick={sideDrawerClick}>\r\n                    <NavigationItems isAuthenticated={props.isAuthenticated} />\r\n                </nav>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport styles from './Layout.module.css';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        isSideDrawerOpen: false,\r\n    };\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({ isSideDrawerOpen: false });\r\n    };\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState(prevState => ({\r\n            isSideDrawerOpen: !prevState.isSideDrawerOpen,\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Toolbar isAuthenticated={this.props.isAuthenticated} drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                    isOpen={this.state.isSideDrawerOpen}\r\n                    close={this.sideDrawerClosedHandler}\r\n                />\r\n                <main className={styles.Content}>{this.props.children}</main>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: !!state.auth.idToken,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Layout);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './BurgerIngredient.module.css';\r\n\r\nconst BurgerIngredient = props => {\r\n    let ingredient;\r\n\r\n    switch (props.type) {\r\n        case 'bread-bottom':\r\n            ingredient = <div className={styles.BreadBottom} />;\r\n            break;\r\n        case 'bread-top':\r\n            ingredient = (\r\n                <div className={styles.BreadTop}>\r\n                    <div className={styles.Seeds1} />\r\n                    <div className={styles.Seeds2} />\r\n                </div>\r\n            );\r\n            break;\r\n        case 'meat':\r\n            ingredient = <div className={styles.Meat} />;\r\n            break;\r\n        case 'cheese':\r\n            ingredient = <div className={styles.Cheese} />;\r\n            break;\r\n        case 'salad':\r\n            ingredient = <div className={styles.Salad} />;\r\n            break;\r\n        case 'bacon':\r\n            ingredient = <div className={styles.Bacon} />;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n\r\n    return ingredient;\r\n};\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from 'react';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\nimport styles from './Burger.module.css';\r\n\r\nconst Burger = props => {\r\n    let ingredientsArray = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            const igCount = parseInt(props.ingredients[igKey]);\r\n            return [...Array(igCount)].map((_, i) => <BurgerIngredient key={igKey + i} type={igKey} />);\r\n        })\r\n        .reduce((resultArray, igArray) => [...resultArray, ...igArray], []);\r\n\r\n    return (\r\n        <div className={styles.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {ingredientsArray.length > 0 ? ingredientsArray : <p>NO INGREDIENTS ADDED</p>}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Burger;\r\n","import React from 'react';\r\n\r\nimport styles from './BuildControl.module.css';\r\n\r\nconst BuildControl = props => {\r\n    return (\r\n        <div className={styles.BuildControl}>\r\n            <div className={styles.Label}>{props.label}</div>\r\n            <button className={styles.Less} onClick={props.lessButtonHandler} disabled={props.disabled}>\r\n                Less\r\n            </button>\r\n            <button className={styles.More} onClick={props.moreButtonHandler}>\r\n                More\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BuildControl;\r\n","import React from 'react';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport styles from './BuildControls.module.css';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst BuildControls = props => {\r\n    return (\r\n        <div className={styles.BuildControls}>\r\n            <p>\r\n                Price: <strong>{props.price.toFixed(2)}$</strong>\r\n            </p>\r\n            {controls.map(ctrl => (\r\n                <BuildControl\r\n                    key={ctrl.label}\r\n                    label={ctrl.label}\r\n                    moreButtonHandler={() => props.ingredientAdded(ctrl.type)}\r\n                    lessButtonHandler={() => props.ingredientRemoved(ctrl.type)}\r\n                    disabled={props.disabledInfo[ctrl.type]}\r\n                />\r\n            ))}\r\n            <button className={styles.OrderButton} disabled={!props.isOrderable} onClick={props.orderButtonHandler}>\r\n                ORDER\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BuildControls;\r\n","import React, { Component } from 'react';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport styles from './Modal.module.css';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.isOpen !== this.props.isOpen || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Backdrop isOpen={this.props.isOpen} onClick={this.props.closeHandler} />\r\n                <div\r\n                    className={styles.Modal}\r\n                    style={{\r\n                        transform: this.props.isOpen ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.isOpen ? '1' : '0',\r\n                    }}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default Modal;\r\n","import React from 'react';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = props => (\r\n    <button\r\n        className={[\r\n            styles.Button,\r\n            props.type === 'success' ? styles.Success : props.type === 'danger' ? styles.Danger : props.type === 'info' ? styles.Info : '',\r\n        ].join(' ')}\r\n        onClick={props.onClick}\r\n        disabled={props.disabled}\r\n    >\r\n        {props.children}\r\n    </button>\r\n);\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport Button from '../../UI/Button/Button';\r\nimport styles from './OrderSummary.module.css';\r\n\r\nclass OrderSummary extends Component {\r\n    render() {\r\n        const ingredientSummary = Object.keys(this.props.ingredients).map(igKey => (\r\n            <li key={igKey + this.props.ingredients[igKey]}>\r\n                <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n            </li>\r\n        ));\r\n\r\n        return (\r\n            <>\r\n                <h3 className={styles.Header}>Your order</h3>\r\n                <p>Burger with:</p>\r\n                <ul>{ingredientSummary}</ul>\r\n                <p>\r\n                    Total Price: <strong>{this.props.price.toFixed(2)}$</strong>\r\n                </p>\r\n                <p>Proceed to checkout?</p>\r\n                <Button type=\"danger\" onClick={this.props.cancelButtonHandler}>\r\n                    CANCEL\r\n                </Button>\r\n                <Button type=\"success\" onClick={this.props.okButtonHandler}>\r\n                    OK\r\n                </Button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrderSummary;\r\n","import axios from 'axios';\r\nimport backendConfig from '../config/backend-config';\r\n\r\nconst { baseURL } = backendConfig;\r\n\r\nconst instance = axios.create({\r\n    baseURL,\r\n    validateStatus: status => status >= 200 && status < 300, // axios won't throw errors if status code is 4xx by default\r\n});\r\n\r\nexport default instance;\r\n","export default {\r\n    baseURL: 'https://burger-builder-9a45a.firebaseio.com/',\r\n};\r\n","import React from 'react';\r\nimport styles from './Progress.module.css';\r\n\r\nconst Progress = () => {\r\n    return <div className={styles.Progress} />;\r\n};\r\n\r\nexport default Progress;\r\n","import React, { Component } from 'react';\r\nimport Modal from '../../UI/Modal/Modal';\r\n\r\n// TODO: Rewrite it for redux, 'connect' method messes up this HOC\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        constructor() {\r\n            super();\r\n            this.state = {\r\n                error: null,\r\n            };\r\n\r\n            // Add middleware to axios instance:\r\n\r\n            // Set error state to null on every new request\r\n            this.requestInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ error: null });\r\n                return req;\r\n            });\r\n            // Set error state to corresponding error if there is one in http response\r\n            this.responseInterceptor = axios.interceptors.response.use(\r\n                res => res,\r\n                error => {\r\n                    this.setState({ error });\r\n                }\r\n            );\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            // Prevent memory leaks when using this HOC on multiple components\r\n            axios.interceptors.request.eject(this.requestInterceptor);\r\n            axios.interceptors.request.eject(this.responseInterceptor);\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <>\r\n                    <Modal isOpen={!!this.state.error} closeHandler={() => this.setState({ error: null })}>\r\n                        {this.state.error && this.state.error.message}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </>\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../../util/axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        payload: {\r\n            orderId: id,\r\n            orderData,\r\n        },\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = error => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        payload: {\r\n            error,\r\n        },\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START,\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, idToken) => {\r\n    return async dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        try {\r\n            const response = await axios.post('/orders.json', orderData, {\r\n                params: {\r\n                    auth: idToken,\r\n                },\r\n            });\r\n            dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n        } catch (err) {\r\n            console.error(err);\r\n            dispatch(purchaseBurgerFail(err));\r\n        }\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT,\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = orders => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        payload: {\r\n            orders,\r\n        },\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = error => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        payload: {\r\n            error,\r\n        },\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START,\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (idToken, userId) => {\r\n    return async dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const orders = [];\r\n        try {\r\n            const response = await axios.get('/orders.json', {\r\n                params: {\r\n                    auth: idToken,\r\n                    orderBy: '\"userId\"',\r\n                    equalTo: `\"${userId}\"`,\r\n                },\r\n            });\r\n            // For some reason axios doesnt reject promise if response is 4xx. Catch it manualy\r\n            if (!response) {\r\n                throw Error();\r\n            }\r\n            for (let key in response.data) {\r\n                orders.push({\r\n                    ...response.data[key],\r\n                    id: key,\r\n                });\r\n            }\r\n            dispatch(fetchOrdersSuccess(orders));\r\n        } catch (err) {\r\n            console.error(err);\r\n            dispatch(fetchOrdersFail(err));\r\n        }\r\n    };\r\n};\r\n","export const ADD_INGREIDENT = 'ADD_INGREIDENT';\r\nexport const REMOVE_INGREIDENT = 'REMOVE_INGREIDENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START,\r\n    };\r\n};\r\n\r\nexport const authSuccess = (idToken, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        payload: {\r\n            idToken,\r\n            userId,\r\n        },\r\n    };\r\n};\r\n\r\nexport const authFail = error => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        payload: {\r\n            error,\r\n        },\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('idToken');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT,\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = expirationTime => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            console.warn('User token has been expired');\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n    return async dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true,\r\n        };\r\n        const apiKey = process.env.REACT_APP_FIREBASE_API_KEY;\r\n        const url = isSignUp\r\n            ? `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`\r\n            : `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`;\r\n        try {\r\n            const response = await axios.post(url, authData);\r\n            const { idToken: token, localId: userId, expiresIn: expirationTime } = response.data;\r\n\r\n            localStorage.setItem('idToken', token);\r\n            localStorage.setItem('expirationDate', new Date(new Date().getTime() + expirationTime * 1000));\r\n            localStorage.setItem('userId', userId);\r\n\r\n            dispatch(authSuccess(token, userId));\r\n            dispatch(checkAuthTimeout(expirationTime));\r\n        } catch (err) {\r\n            console.error(err);\r\n            dispatch(authFail(err.response.data.error));\r\n        }\r\n    };\r\n};\r\n\r\nexport const authCheckStatus = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('idToken');\r\n        const expirationDateString = localStorage.getItem('expirationDate');\r\n        const userId = localStorage.getItem('userId');\r\n\r\n        const expirationDate = expirationDateString && new Date(expirationDateString);\r\n        const currentDate = new Date();\r\n        if (!token || !expirationDateString || !userId || (expirationDate && expirationDate < currentDate)) {\r\n            return dispatch(logout());\r\n        }\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(checkAuthTimeout(expirationDate / 1000 - currentDate / 1000));\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../util/axios-orders';\r\nimport Progress from '../UI/Progress/Progress';\r\nimport withErrorHandler from '../HOC/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass BurgerBuilder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            inOrderMode: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    isBurgerOrderable = () => {\r\n        return Object.values(this.props.ingredients).every(amount => amount <= 0) // No ingredients chosen\r\n            ? false\r\n            : true;\r\n    };\r\n\r\n    orderButtonHandler = () => {\r\n        if (this.props.isAuthenticated) {\r\n            return this.setState({ inOrderMode: true });\r\n        }\r\n        this.props.history.push({ pathname: '/auth', search: '?order=true' });\r\n    };\r\n\r\n    orderModeOffHandler = () => {\r\n        this.setState({ inOrderMode: false });\r\n    };\r\n\r\n    proceedToCheckout = async () => {\r\n        this.props.inInitPurchase();\r\n        this.props.history.push({ pathname: '/checkout' });\r\n    };\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ingredients,\r\n        };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Modal isOpen={this.state.inOrderMode} closeHandler={this.orderModeOffHandler}>\r\n                    {this.props.ingredients ? (\r\n                        <OrderSummary\r\n                            ingredients={this.props.ingredients}\r\n                            price={this.props.totalPrice}\r\n                            cancelButtonHandler={this.orderModeOffHandler}\r\n                            okButtonHandler={this.proceedToCheckout}\r\n                        />\r\n                    ) : null // Progress spinner?\r\n                    }\r\n                </Modal>\r\n                {this.props.error ? (\r\n                    <p>Error occured while loading the ingredients. Try refreshing the page or check developer console for details.</p>\r\n                ) : this.props.ingredients ? (\r\n                    <>\r\n                        <Burger ingredients={this.props.ingredients} />\r\n                        <BuildControls\r\n                            ingredientAdded={this.props.onIngredientAdded}\r\n                            ingredientRemoved={this.props.onIngredientRemoved}\r\n                            disabledInfo={disabledInfo}\r\n                            price={this.props.totalPrice}\r\n                            isOrderable={this.isBurgerOrderable()}\r\n                            orderButtonHandler={this.orderButtonHandler}\r\n                        />\r\n                    </>\r\n                ) : (\r\n                    <Progress />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        totalPrice: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: !!state.auth.idToken,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: ingredientName => {\r\n            dispatch(actions.addIngredient(ingredientName));\r\n        },\r\n        onIngredientRemoved: ingredientName => {\r\n            dispatch(actions.removeIngredient(ingredientName));\r\n        },\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        inInitPurchase: () => dispatch(actions.purchaseInit()),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withErrorHandler(BurgerBuilder, axios));\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../../util/axios-orders';\r\n\r\nexport const addIngredient = ingredientName => {\r\n    return {\r\n        type: actionTypes.ADD_INGREIDENT,\r\n        payload: {\r\n            ingredientName,\r\n        },\r\n    };\r\n};\r\n\r\nexport const removeIngredient = ingredientName => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREIDENT,\r\n        payload: {\r\n            ingredientName,\r\n        },\r\n    };\r\n};\r\n\r\nexport const setIngredients = ingredients => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        payload: {\r\n            ingredients,\r\n        },\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get('/ingredients.json');\r\n            dispatch(setIngredients(response.data));\r\n        } catch (err) {\r\n            console.error(err);\r\n            dispatch(fetchIngredientsFailed());\r\n        }\r\n    };\r\n};\r\n","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport styles from './CheckoutSummary.module.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CheckoutSummary = props => {\r\n    const { price } = props;\r\n\r\n    return (\r\n        <div className={styles.CheckoutSummary}>\r\n            <h1>Your order ({price && Number(price).toFixed(2)}$)</h1>\r\n            <div style={{ width: '100%', margin: 'auto' }}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button type=\"danger\" onClick={props.onCheckoutCancelled}>\r\n                CANCEL\r\n            </Button>\r\n            <Button type=\"success\" onClick={props.onCheckoutContinued}>\r\n                OK\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    price: state.burgerBuilder.totalPrice,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(CheckoutSummary);\r\n","import React from 'react';\r\nimport styles from './Input.module.css';\r\n\r\nconst Input = props => {\r\n    let inputElement = null;\r\n    const inputStyles = [styles.InputElement];\r\n\r\n    if (props.invalid) {\r\n        inputStyles.push(styles.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case 'select':\r\n            inputElement = (\r\n                <select onChange={props.onChange} className={inputStyles.join(' ')} value={props.value}>\r\n                    {props.elementConfig.options.map(o => (\r\n                        <option key={o.value} value={o.value}>\r\n                            {o.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        case 'input':\r\n        default:\r\n            inputElement = (\r\n                <input\r\n                    onChange={props.onChange}\r\n                    className={inputStyles.join(' ')}\r\n                    type={props.elementType}\r\n                    {...props.elementConfig}\r\n                    value={props.value}\r\n                />\r\n            );\r\n    }\r\n\r\n    return (\r\n        <div className={styles.Input}>\r\n            <label className={styles.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","export default function checkValidity(value, rules) {\r\n    let isValid = true;\r\n\r\n    if (!rules) return isValid;\r\n\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n}\r\n","import React, { Component } from 'react';\r\nimport Button from '../../UI/Button/Button';\r\nimport Progress from '../../UI/Progress/Progress';\r\nimport axios from '../../../util/axios-orders';\r\nimport Input from '../../UI/Input/Input';\r\nimport { connect } from 'react-redux';\r\nimport withErrorHandler from '../../HOC/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\nimport checkValidity from '../../../util/checkValidity';\r\nimport styles from './ContactData.module.css';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name',\r\n                },\r\n                value: '',\r\n                validationRules: { required: true },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street',\r\n                },\r\n                value: '',\r\n                validationRules: { required: true },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code',\r\n                },\r\n                value: '',\r\n                validationRules: { required: true },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country',\r\n                },\r\n                value: '',\r\n                validationRules: { required: true },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your email',\r\n                },\r\n                value: '',\r\n                validationRules: { required: true },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [{ value: 'fastest', displayValue: 'Fastest' }, { value: 'cheapest', displayValue: 'Cheapest' }],\r\n                },\r\n                value: 'fastest',\r\n                validationRules: null,\r\n                valid: true,\r\n                touched: false,\r\n            },\r\n        },\r\n        isFormValid: false,\r\n    };\r\n\r\n    orderHandler = async ev => {\r\n        ev.preventDefault();\r\n        const formData = {};\r\n        for (let formElemId in this.state.orderForm) {\r\n            formData[formElemId] = this.state.orderForm[formElemId].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ingredients,\r\n            orderData: formData,\r\n            userId: this.props.userId,\r\n        };\r\n\r\n        this.props.onOrderBurger(order, this.props.idToken);\r\n    };\r\n\r\n    inputChangeHandler = (ev, inputIdentifier) => {\r\n        // Copy both objects to avoid corrupting state\r\n        const updatedOrderForm = { ...this.state.orderForm };\r\n        const updatedElement = { ...updatedOrderForm[inputIdentifier] };\r\n\r\n        updatedElement.value = ev.target.value;\r\n        updatedElement.valid = checkValidity(updatedElement.value, updatedElement.validationRules);\r\n        updatedElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedElement;\r\n\r\n        let formIsValid = true;\r\n        for (let inputId in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputId].valid && formIsValid;\r\n        }\r\n        this.setState({ orderForm: updatedOrderForm, formIsValid });\r\n    };\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key],\r\n            });\r\n        }\r\n        return (\r\n            <div className={styles.ContactData}>\r\n                <h4>Enter your contact data</h4>\r\n                {this.props.isLoading ? (\r\n                    <Progress />\r\n                ) : (\r\n                    <form onSubmit={this.orderHandler}>\r\n                        {formElementsArray.map(formElem => {\r\n                            return (\r\n                                <Input\r\n                                    key={formElem.id}\r\n                                    elementType={formElem.config.elementType}\r\n                                    elementConfig={formElem.config.elementConfig}\r\n                                    value={formElem.config.value}\r\n                                    onChange={ev => this.inputChangeHandler(ev, formElem.id)}\r\n                                    invalid={formElem.config.validationRules && formElem.config.touched && !formElem.config.valid}\r\n                                />\r\n                            );\r\n                        })}\r\n                        <Button type=\"success\" disabled={!this.state.formIsValid}>\r\n                            {'ORDER'}\r\n                        </Button>\r\n                    </form>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        isLoading: state.order.isLoading,\r\n        idToken: state.auth.idToken,\r\n        userId: state.auth.userId,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData, idToken) => dispatch(actions.purchaseBurger(orderData, idToken)),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withErrorHandler(ContactData, axios));\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport CheckoutSummary from '../CheckoutSummary/CheckoutSummary';\r\nimport ContactData from '../ContactData/ContactData';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Checkout extends Component {\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    };\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.props.ingredients ? (\r\n                    <Redirect to=\"/\" />\r\n                ) : this.props.isPurchased ? (\r\n                    <Redirect to=\"/orders\" />\r\n                ) : (\r\n                    <CheckoutSummary\r\n                        ingredients={this.props.ingredients}\r\n                        onCheckoutCancelled={this.checkoutCancelledHandler}\r\n                        onCheckoutContinued={this.checkoutContinuedHandler}\r\n                        price={this.props.totalPrice}\r\n                    />\r\n                )}\r\n\r\n                <Route path={`${this.props.match.path}/contact-data`} component={ContactData} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        isPurchased: state.order.isPurchased,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Checkout);\r\n","import React from 'react';\r\nimport styles from './Order.module.css';\r\n\r\nconst Order = props => {\r\n    const ingredients = [];\r\n    for (let key in props.ingredients) {\r\n        ingredients.push({ name: key, count: props.ingredients[key] });\r\n    }\r\n    return (\r\n        <div className={styles.Order}>\r\n            <p>Ingredients: </p>\r\n            {ingredients.map(ig => (\r\n                <span\r\n                    key={ig.name}\r\n                    style={{\r\n                        textTransform: 'capitalize',\r\n                        display: 'inline-block',\r\n                        padding: '3px',\r\n                        margin: '0 8px',\r\n                        border: '1px solid gray',\r\n                    }}\r\n                >\r\n                    {ig.name} ({ig.count})\r\n                </span>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Order;\r\n","import React, { Component } from 'react';\r\nimport Order from '../Order/Order';\r\nimport axios from '../../util/axios-orders';\r\nimport withErrorHandler from '../HOC/withErrorHandler/withErrorHandler';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport Progress from '../UI/Progress/Progress';\r\n\r\nclass Orders extends Component {\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.idToken, this.props.userId);\r\n    }\r\n\r\n    updateOrders = async () => {\r\n        const orders = [];\r\n        try {\r\n            const response = await axios.get('/orders.json');\r\n            for (let key in response.data) {\r\n                orders.push({\r\n                    ...response.data[key],\r\n                    id: key,\r\n                });\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n        } finally {\r\n            this.setState({ isLoading: false, orders });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return this.props.error ? (\r\n            <p>Error occured</p>\r\n        ) : this.props.isLoading ? (\r\n            <Progress />\r\n        ) : (\r\n            <div>\r\n                {this.props.orders.map(order => (\r\n                    <Order key={order.id} ingredients={order.ingredients} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        idToken: state.auth.idToken,\r\n        userId: state.auth.userId,\r\n        isLoading: state.order.isLoading,\r\n        error: state.order.fetchError,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (idToken, userId) => dispatch(actions.fetchOrders(idToken, userId)),\r\n    };\r\n};\r\n\r\nexport default withErrorHandler(\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )(Orders),\r\n    axios\r\n);\r\n","import React, { Component } from 'react';\r\nimport Input from '../UI/Input/Input';\r\nimport Button from '../UI/Button/Button';\r\nimport Progress from '../UI/Progress/Progress';\r\nimport { Redirect } from 'react-router-dom';\r\nimport styles from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport checkValidity from '../../util/checkValidity';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Mail Adress',\r\n                },\r\n                value: '',\r\n                validationRules: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password',\r\n                },\r\n                value: '',\r\n                validationRules: {\r\n                    required: true,\r\n                    minLength: 6,\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n            },\r\n        },\r\n        isSignUp: true,\r\n    };\r\n\r\n    inputChangeHandler = (ev, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: ev.target.value,\r\n                valid: checkValidity(ev.target.value, this.state.controls[controlName].validationRules),\r\n                touched: true,\r\n            },\r\n        };\r\n        this.setState({ controls: updatedControls });\r\n    };\r\n\r\n    submitHandler = ev => {\r\n        ev.preventDefault();\r\n        const email = this.state.controls.email.value;\r\n        const password = this.state.controls.password.value;\r\n        const isSignUp = this.state.isSignUp;\r\n        this.props.onAuth(email, password, isSignUp);\r\n    };\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                isSignUp: !prevState.isSignUp,\r\n            };\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if (this.props.isAuthenticated) {\r\n            // If query params are present, then checkout (no need to parse them since we have only one scenario of using them)\r\n            return <Redirect to={this.props.history.location.search ? '/checkout' : '/'} />;\r\n        }\r\n        return (\r\n            <div className={styles.Auth}>\r\n                {this.errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    <h1>{this.state.isSignUp ? 'Create New Account' : 'Sign In'}</h1>\r\n                    {this.props.isLoading ? <Progress /> : this.formControls}\r\n                    <Button type=\"success\">SUBMIT</Button>\r\n                </form>\r\n                <p>{this.state.isSignUp ? 'Already have an account?' : 'Dont have an account?'} </p>\r\n                <Button onClick={this.switchAuthModeHandler} type=\"info\">\r\n                    {this.state.isSignUp ? 'SIGN IN' : 'SIGN UP'}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    get formControls() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.controls) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key],\r\n            });\r\n        }\r\n        return formElementsArray.map(formElem => {\r\n            return (\r\n                <Input\r\n                    key={formElem.id}\r\n                    elementType={formElem.config.elementType}\r\n                    elementConfig={formElem.config.elementConfig}\r\n                    value={formElem.config.value}\r\n                    onChange={ev => this.inputChangeHandler(ev, formElem.id)}\r\n                    invalid={formElem.config.validationRules && formElem.config.touched && !formElem.config.valid}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    get errorMessage() {\r\n        return this.props.error && <p>{this.props.error.message}</p>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.auth.isLoading,\r\n        error: state.auth.error,\r\n        isAuthenticated: !!state.auth.idToken,\r\n        isBuilderTouched: state.burgerBuilder.isTouched,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Auth);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n    render() {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout()),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(Logout);\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Layout from './components/Layout/Layout';\r\nimport BurgerBuilder from './components/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './components/Order/Checkout/Checkout';\r\nimport Orders from './components/Orders/Orders';\r\nimport Auth from './components/Auth/Auth';\r\nimport Logout from './components/Auth/Logout';\r\nimport * as actions from './store/actions/index';\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.onTryAutoSignUp();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Layout>\r\n                    <Switch>\r\n                        {this.props.isAuthenticated && <Route path=\"/checkout\" component={Checkout} />}\r\n                        {this.props.isAuthenticated && <Route path=\"/orders\" component={Orders} />}\r\n                        {this.props.isAuthenticated && <Route path=\"/logout\" component={Logout} />}\r\n                        <Route path=\"/auth\" component={Auth} />\r\n                        <Route path=\"/\" exact component={BurgerBuilder} />\r\n                        <Redirect to=\"/\" />\r\n                    </Switch>\r\n                </Layout>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: !!state.auth.idToken,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onTryAutoSignUp: () => dispatch(actions.authCheckStatus()),\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7,\r\n};\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    isTouched: false,\r\n    error: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREIDENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.payload.ingredientName]: state.ingredients[action.payload.ingredientName] + 1,\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.payload.ingredientName],\r\n                isTouched: true,\r\n            };\r\n        case actionTypes.REMOVE_INGREIDENT:\r\n            return state.ingredients[action.payload.ingredientName] <= 0\r\n                ? state\r\n                : {\r\n                      ...state,\r\n                      ingredients: {\r\n                          ...state.ingredients,\r\n                          [action.payload.ingredientName]: state.ingredients[action.payload.ingredientName] - 1,\r\n                      },\r\n                      totalPrice: state.totalPrice - INGREDIENT_PRICES[action.payload.ingredientName],\r\n                      isTouched: true,\r\n                  };\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    salad: action.payload.ingredients.salad,\r\n                    bacon: action.payload.ingredients.bacon,\r\n                    cheese: action.payload.ingredients.cheese,\r\n                    meat: action.payload.ingredients.meat,\r\n                },\r\n                totalPrice: 4,\r\n                error: false,\r\n                isTouched: false,\r\n            };\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    isLoading: false,\r\n    isPurchased: false,\r\n    fetchError: null,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return {\r\n                ...state,\r\n                isPurchased: false,\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = {\r\n                ...action.payload.orderData,\r\n                id: action.payload.orderId,\r\n            };\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isPurchased: true,\r\n                orders: [...state.orders, newOrder],\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n            };\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.payload.orders,\r\n                isLoading: false,\r\n                fetchError: false, // TODO: get error\r\n            };\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                fetchError: true, // TODO: get error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    idToken: null,\r\n    userId: null,\r\n    error: null,\r\n    isLoading: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                isLoading: true,\r\n            };\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                idToken: action.payload.idToken,\r\n                userId: action.payload.userId,\r\n                error: null,\r\n                isLoading: false,\r\n            };\r\n        case actionTypes.AUTH_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload.error,\r\n                isLoading: false,\r\n            };\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return {\r\n                ...state,\r\n                idToken: null,\r\n                userId: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\r\nimport orderReducer from './store/reducers/order';\r\nimport authReducer from './store/reducers/auth';\r\n\r\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    burgerBuilder: burgerBuilderReducer,\r\n    order: orderReducer,\r\n    auth: authReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter basename={process.env.REACT_APP_URL_BASE_NAME}>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}